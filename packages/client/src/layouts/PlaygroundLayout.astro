---
const { title } = Astro.props;
import PlaygroundContent from "../components/PlaygroundContent.astro";
import TabsNav from "../components/TabsNav.astro";
import LinkSVG from "/assets/link.svg";
import BookSVG from "/assets/book.svg";
import { fetchData, parseCookie } from "../utils/common";
import MobileHeader from "../components/MobileHeader.astro";
import TestCaseLayout from "../components/CodeEditorLayout/TestCaseLayout";

const { sectionId, elementId, type = "article" } = Astro.props;
const cookies = parseCookie(Astro?.request?.headers?.get("cookie"));

const token = cookies?.cogoacademytoken;
const batch = cookies?.batch;
const data = await fetchData(
    `playground/${sectionId}/${type}/${elementId}`,
    token
);

console.log("playground", data);
const testcases = data?.clicked_element?.test_cases.map((t) => t.text);
// [
//     "You should have 2 p elements with Kitty Ipsum text.",
//     "Each of your p elements should have a closing tag.",
//     "Your code should have one main element.",
//     "The main element should have two paragraph elements as children.",
// ];
const instructions = data?.instruction;
const content = "Console";
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Playground - {title}</title>
    </head>
    <body>
        <MobileHeader />
        <div class="root">
            <TabsNav>
                <p class="left_title">Course Contents</p>
                {
                    data?.all_elements?.map((element: any) => {
                        return (
                            <a
                                href={`/playground/${sectionId}/${element.element_type}/${element.element_id}`}
                                class={`tab ${
                                    elementId === element.element_id
                                        ? "tab_selected"
                                        : "not-selected"
                                }`}
                            >
                                <div class="img-div">
                                    <input
                                        type="checkbox"
                                        checked={!!element.done}
                                    />
                                </div>
                                <div class="name-time">
                                    <div>{element.element_name}</div>
                                    <div>
                                        <img src={BookSVG} alt="book-icon" />
                                        <span>
                                            {element.element_time_in_mins}
                                        </span>
                                    </div>
                                </div>
                            </a>
                        );
                    })
                }
            </TabsNav>
            <div class="content">
                <PlaygroundContent
                    element_content={data?.clicked_element}
                    next_element={data?.clicked_element?.next_element}
                />
            </div>
            {
                (
                    <div class="right_box">
                        {data?.clicked_element?.exercise_id ? (
                            <TestCaseLayout
                                testcases={testcases}
                                instructions={instructions}
                                content={content}
                                client:only
                            />
                        ) : (
                            <>
                                <div class="right_box_title">
                                    Additional Links
                                </div>
                                {data?.links?.map((link) => {
                                    return (
                                        <div class="link_box">
                                            <a
                                                target="_blank"
                                                href={link.link_url}
                                            >
                                                <img src={LinkSVG} alt="" />
                                            </a>
                                            <div class="link_content">
                                                <a
                                                    target="_blank"
                                                    href={link.link_url}
                                                    class="link_title"
                                                >
                                                    {link.link_name}
                                                </a>
                                                <a
                                                    target="_blank"
                                                    href={link.link_url}
                                                    class="domain_text"
                                                >
                                                    {link.link_url}
                                                </a>
                                            </div>
                                        </div>
                                    );
                                })}
                            </>
                        )}
                    </div>
                )
            }
        </div>
    </body>
</html>

<style>
    .root {
        display: flex;
        height: 100vh;
    }
    .content {
        flex: 2;
        display: flex;
        flex-direction: column;
        gap: 24px;
        background-color: #fdfbf6;
        width: 50%;
    }
    .name-time > div:last-child {
        font-weight: 400;
        font-size: var(--font-size-sm);
        color: var(--color-secondary-2);
        display: flex;
        align-items: center;
        gap: 5px;
    }
    .left_title.right_box_title {
        color: var(--font-color);
        font-weight: 500;
    }
    .right_box {
        z-index: 10;
        flex: 1;
        display: flex;
        flex-direction: column;
        height: 100vh;
        background: #ffffff;
        box-shadow: 0px 0px 8px rgba(98, 127, 172, 0.2);
        overflow: auto;
    }
    .right_box_title {
        padding: 16px;
    }
    .img-div {
        width: 16px;
        height: 16px;
        /* background-color: red; */
    }
    .link_box {
        display: flex;
        gap: 10px;
        width: 100%;
        align-items: center;
        border-bottom: 1px solid var(--border-color);
        padding: 14px 16px;
    }
    .link_content {
        flex: 1;
        display: flex;
        flex-direction: column;
    }
    .link_content > a:first-child {
        font-weight: 500;
        font-size: var(--font-size-md);
        color: var(--font-color);
    }
    .link_content > a:last-child {
        font-weight: 400;
        font-size: var(--font-size-sm);
        color: var(--color-secondary-2);
    }
    .link_box > *,
    .link_content > * {
        text-decoration: none;
        color: black;
    }
    .link_box > a:first-child {
        padding: 10px;
        background-color: #f3fafa;
        border-radius: 50%;
    }
    .link_box > a:last-child {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 5px;
    }
    input[type="checkbox"] {
        pointer-events: none;
    }
    @media (width<=768px) {
        .right_box {
            display: none;
        }
    }
</style>
